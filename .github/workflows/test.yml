name: QEMU test
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

env:
  PYTHONUNBUFFERED: "1"

jobs:
  test:
    name: Test OpenWrt QEMU
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: malta/be
            file: openwrt-malta-be-vmlinux-initramfs.elf
            qemu_bin: qemu-system-mips

          - target: x86/64
            file: openwrt-x86-64-generic-squashfs-combined.img.gz
            qemu_bin: qemu-system-x86_64

          - target: armsr/armv8
            file: openwrt-armsr-armv8-generic-initramfs-kernel.bin
            qemu_bin: qemu-system-aarch64

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            python3-pip \
            qemu-system-aarch64 \
            qemu-system-mips \
            qemu-system-x86

      - name: Install project dependencies
        run: |
          pip3 install poetry
          poetry install

      - name: Download test firmware
        run: |
          wget https://downloads.openwrt.org/snapshots/targets/${{ matrix.target }}/${{ matrix.file }} \
            --output-document ${{ matrix.file }}

      - name: Run test
        run: |
          export LG_QEMU_BIN=$(which ${{ matrix.qemu_bin }})
          
          # unpack gzip image if exists
          if [[ ${{ matrix.file }} == *.gz ]]; then
            gunzip ${{ matrix.file }} || true
          fi

          target=${{ matrix.target }}
          poetry run pytest --lg-env target_${target/\//-}.yaml
