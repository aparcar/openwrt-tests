name: QEMU test
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

env:
  PYTHONUNBUFFERED: "1"

jobs:
  test:
    name: Test OpenWrt QEMU
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: malta-be
            firmware: openwrt-malta-be-vmlinux-initramfs.elf
            dependency: qemu-system-mips

          - target: malta-le
            firmware: openwrt-malta-le-vmlinux-initramfs.elf
            dependency: qemu-system-mipsel

          - target: malta-be64
            firmware: openwrt-malta-be64-vmlinux-initramfs.elf
            dependency: qemu-system-mips64

          - target: malta-le64
            firmware: openwrt-malta-le64-vmlinux-initramfs.elf
            dependency: qemu-system-mips64el

          - target: x86-64
            firmware: openwrt-x86-64-generic-squashfs-combined.img.gz
            dependency: qemu-system-x86

          - target: armsr-armv8
            firmware: openwrt-armsr-armv8-generic-initramfs-kernel.bin
            dependency: qemu-system-aarch64

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          path: tests
          depth: 1

      - name: Check out openwrt.git
        uses: actions/checkout@v2
        with:
          repository: openwrt/openwrt
          path: openwrt
          depth: 1

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            python3-poetry \
            ${{ matrix.dependency }}

      - name: Link tests to openwrt.git
        run: |
          ln -s $GITHUB_WORKSPACE/tests $GITHUB_WORKSPACE/openwrt/tests

      - name: Poetry install
        run: |
          cd $GITHUB_WORKSPACE/tests
          poetry install

      - name: Download test firmware
        env:
          target: ${{ matrix.target }}
        run: |
          wget https://downloads.openwrt.org/snapshots/targets/${target/-/\/}/${{ matrix.firmware }} \
            --output-document $GITHUB_WORKSPACE/openwrt/${{ matrix.firmware }}

      - name: Run test
        run: |
          cd $GITHUB_WORKSPACE/openwrt

          gunzip ${{ matrix.firmware }} || true

          firmware=${{ matrix.firmware }}

          make tests/${{ matrix.target }} \
            FIRMWARE=$GITHUB_WORKSPACE/${firmware/.gz/}

      - name: Upload console logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: console-${{ matrix.target }}
          path: console_*

      - name: Upload results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: results-${{ matrix.target }}
          path: results.json
